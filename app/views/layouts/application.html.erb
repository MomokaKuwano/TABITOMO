<!DOCTYPE html>
<html lang="ja">
  <head>
    <title>Tabitomo</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <!--FontAwesome導入-->
    <script src="https://kit.fontawesome.com/eabeaac4fc.js" crossorigin="anonymous"></script>
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>
    <%= include_gon %>
    <!--app/javascript 配下のファイルを参照-->
    <%= stylesheet_pack_tag 'application', media: 'all', 'data-turbolinks-track': 'reload' %>
    <%= javascript_pack_tag 'application', 'data-turbolinks-track': 'reload' %>
  </head>

  <body>

      <main>
        <div class="container">
          <div class="row">
            <!--ヘッダーがサイドのため部分テンプレで定義-->
            <div class="col-2">
              <%= render 'layouts/header' %>
            </div>
            <!--main部分-->
            <div class="col-10">
              <%= yield %>
            </div>
          </div>
        </div>
      </main>
    <!--Bootstrapのscript-->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.3/umd/popper.min.js" integrity="sha384-ZMP7rVo3mIykV+2+9J3UJ46jBk0WLaUAdn689aCwoqbBJiSnjAK/l8WvCWPIPm49" crossorigin="anonymous"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/js/bootstrap.min.js" integrity="sha384-ChfqqxuZUCnJSK3+MXmPNIyE6ZbWh2IMqE241rYiqJxyMiZ6OW/JmZQ5stwEULTy" crossorigin="anonymous"></script>
    <!--GoogleMapのscript-->
    <script>
      let map; //変数の定義
      let geocoder; //変数の定義
      let pin = {lat: 35.6594666, lng: 139.7005536};
      // console.log("こんにちは");
      function initMap(){ //コールバック関数
        geocoder = new google.maps.Geocoder() //GoogleMapsAPIジオコーディングサービスにアクセス
        if(document.getElementById('map')){ //'map'というidを取得できたら実行
          map = new google.maps.Map(document.getElementById('map'), { //'map'というidを取得してマップを表示
            center: {lat: pin.lat, lng: pin.lng}, //最初に表示する場所（今回は「渋谷スクランブル交差点」が初期値）
            zoom: 15, //拡大率（1〜21まで設定可能）
          });
          marker = new google.maps.Marker({ //GoogleMapにマーカーを落とす
            position:  {lat: pin.lat, lng: pin.lng}, //マーカーを落とす位置を決める（値はDBに入っている）
            map: map //マーカーを落とすマップを指定
          });
        }else{ //'map'というidが無かった場合
          map = new google.maps.Map(document.getElementById('show_map'), { //'show_map'というidを取得してマップを表示
            center: {lat: pin.lat, lng: pin.lng}, //controllerで定義した変数を緯度・経度の値とする（値はDBに入っている）
            zoom: 15, //拡大率（1〜21まで設定可能）
          });
        console.log(pin.lat,pin.lng);
          marker = new google.maps.Marker({ //GoogleMapにマーカーを落とす
            position:  {lat: pin.lat, lng: pin.lng}, //マーカーを落とす位置を決める（値はDBに入っている）
            map: map //マーカーを落とすマップを指定
          });
        }
        //   // クリックイベントを追加
        //   map.addListener('click', function(e) {
        //     getClickLatLng(e.latLng, map);
        //   });
        // }

        // function getClickLatLng(lat_lng, map) {

        //   // 座標を表示
        //   pin.lat = lat_lng.lat();
        //   pin.lng = lat_lng.lng();

        //   // マーカーを設置
        //   var marker = new google.maps.Marker({
        //     position: lat_lng,
        //     map: map
        //   });

        //   // 座標の中心をずらす
        //   // http://syncer.jp/google-maps-javascript-api-matome/map/method/panTo/
        //   map.panTo(lat_lng);
      }
      // 検索ボタン
      function codeAddress(){ //コールバック関数
        let inputAddress = document.getElementById('address').value; //'address'というidの値（value）を取得

        geocoder.geocode( { 'address': inputAddress}, function(results, status) { //ジオコードしたい住所を引数として渡す
          if (status == 'OK') {
            let lat = results[0].geometry.location.lat(); //ジオコードした結果の緯度
            let lng = results[0].geometry.location.lng(); //ジオコードした結果の経度
            let mark = {
                lat: lat, //緯度
                lng: lng  //経度
            };
            pin = mark;
            map.setCenter(results[0].geometry.location); //最も近い、判読可能な住所を取得したい場所の緯度・経度
            let marker = new google.maps.Marker({
                map: map, //マーカーを落とすマップを指定
                position: results[0].geometry.location //マーカーを落とす位置を決める
            });
          } else {
            alert('該当する結果がありませんでした');
          }
        });
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAP_KEY"] %>&callback=initMap"></script>
  </body>

</html>